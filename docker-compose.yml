version: "3.4"

services:
  #network_mode: host
  backend:                        # backend api
    build:
      network: host
      context: .
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
       - database
       - cache
    environment:
      PAYPACK_POSTGRES_URL: ${PAYPACK_POSTGRES_URL}
      PAYPACK_LOG_LEVEL: ${PAYPACK_LOG_LEVEL}
      PAYPACK_REDIS_URL: ${PAYPACK_REDIS_URL}
      PAYPACK_PAYMENT_URL: ${PAYPACK_PAYMENT_URL}
      PAYPACK_PAYMENT_SECRET: ${PAYPACK_PAYMENT_SECRET}
      PAYPACK_PAYMENT_APP_ID: ${PAYPACK_PAYMENT_APP_ID}
      PAYPACK_PAYMENT_CALLBACK: ${PAYPACK_PAYMENT_CALLBACK}
      PORT: "8000"
      GO_ENV: ${GO_ENV}
    ports:
      - "8000:8000"  
    restart: always

  database:
    image: postgres:alpine
    container_name: database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test
    ports:
       - "5432:5432"
    volumes:
       - db-data:/var/lib/postgresql/data
    restart: on-failure
  
  cache:
    image: redis:latest
    container_name: cache
    restart: on-failure
    environment:
       - NODE_ENV=development
      # - REDIS_PASSWORD=password
    ports:
       - "6379:6379"
    volumes:
      - cache-data:/data

volumes: 
  db-data:
  cache-data:
